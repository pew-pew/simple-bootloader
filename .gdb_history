target remote localhost:1234
file boot_sector.bin 
file boot_sector.bin
target remote localhost:1234
si
si
exit
target remote localhost:1234
layout asm
si
si
c
exit
file boot_sector.bin
help file
target remote localhost:1234
si
c
si
set arch i386:x86-64
set arch i386:x86-64:intel
file boot_sector.bin 
file boot_sector.elf 
target remote localhost:1234
target remote localhost:1234
file boot_sector.elf 
c
exit
file boot_sector.elf 
target remote localhost:1234
file boot_sector.elf 
layout cmd
layout src
layout regs
layot 
layout  asm
layout split
layout next
layout asm
file boot_sector.elf 
target remote localhost:1234
set arch i386:x86-64
file boot_sector.elf 
set arch i386:x86-64
target remote localhost:1234
layout src
si
layout regs
focus regs
file boot_sector.elf 
set arch i386:x86-64
set arch i386:x86-64
target remote localhost:1234
c
si
focus regs
print rip
focus cmd
focus $cmd
print rip
print $rip
print $rip
symbol-file boot_sector.elf 
target remote localhost:1234
x/3i $pc
c
x/3i $pc
x/3i $pc
help x
x/3i $pc
target remote localhost:1234
c
x/3i $pc
x/3i $pc
x/3i $pc
focus regs
target remote localhost:1234
c
focus regs
file boot_sector_fake.elf 
focus asm
focus src
target remote localhost:1234
file boot_sector_fake.elf 
set arch i386:x86-64
target remote localhost:1234
c
info symbol 
info symbols
list symbols
info list
frame
